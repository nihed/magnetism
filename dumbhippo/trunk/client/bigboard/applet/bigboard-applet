#!/usr/bin/python
# -*- mode: python; tab-width: 4 -*-

import sys, os, os.path, re, getopt, urlparse, logging

import gtk, gobject, gnomeapplet, dbus, dbus.glib

basedir = os.path.dirname(sys.argv[0])
if os.access(os.path.join(basedir, 'Makefile.am'), os.R_OK):
    srcdir = os.path.abspath(os.path.join(basedir, ".."))
    print "adding %s to path" % (srcdir,)
    sys.path.insert(0, srcdir)

import bigboard.libbig
import bigboard.libbig.logutil
import bigboard.libbig.httpcache
# workaround needed until the cache is safe for multiple processes to use
bigboard.libbig.httpcache._cache = bigboard.libbig.httpcache.Cache(cachedir=os.path.join(os.path.expanduser("~"), '.gnome2', 'bigboard-applet', 'cache'))
from bigboard.libbig.http import AsyncHTTPFetcher
from bigboard.libbig.imagecache import URLImageCache
import bigboard.mugshot as mugshot

_logger = logging.getLogger("bigboard.Applet")


class UrlImage(gtk.Image):
    def __init__(self):
        super(UrlImage, self).__init__()

    def set_url(self, url):
        image_cache = URLImageCache.getInstance()
        image_cache.get(url, self.__handle_image_load, self.__handle_image_error, format='pixbuf')
        
    def __handle_image_load(self, url, pixbuf):
        _logger.debug("Got image load result from %s", url)
        self.set_from_pixbuf(pixbuf)
        
    def __handle_image_error(self, url, exc):
        logging.exception("failed to load image for '%s'", url)
    
class BigBoardApplet(gobject.GObject):
    def __init__(self, applet, iid):
        super(BigBoardApplet, self).__init__()
        self.__applet = applet
        self.__iid = iid

        if applet.get_orient() in (gnomeapplet.ORIENT_UP, gnomeapplet.ORIENT_DOWN):
            self.__box = gtk.HBox()
        else:
            self.__box = gtk.VBox()

        self.__mugshot = mugshot.get_mugshot()
        self.__mugshot.connect("self-known", self.__on_self_known)
        
        self.__img = UrlImage()
        self.__box.pack_start(self.__img, expand=True)

        self.__box.show_all()
        self.__applet.add(self.__box)

        self.__sync()

    def __on_self_known(self, mugshot):
        _logger.debug("got mugshot self known")
        self.__sync()

    def __sync(self):
        myself = self.__mugshot.get_self()
        _logger.debug("self: %s", myself)
        if myself:
            url = urlparse.urljoin(mugshot.get_mugshot().get_baseurl(), myself.get_photo_url()) 
            _logger.debug("loading self url: %s", url)
            self.__img.set_url(url)
        
if __name__ == "__main__":	
    debug = False
    window = False
    debug_modules = []
    try:
        opts, args = getopt.getopt(sys.argv[1:], "wd", ["window", "debug", "debug-modules"])
    except getopt.GetoptError:
        opts = []

    for o, a in opts:
        if o in ('-d', '--debug'):
            debug = True
        elif o in ("-h", "--help"):
            usage()
        elif o in ("-w", "--window"):
            window = True
        elif o in ('--debug-modules'):
            debug_modules = v.split(',')

    gtk.gdk.threads_init()
    dbus.glib.threads_init()    

    default_log_level = 'ERROR'
    if debug:
        default_log_level = 'DEBUG'

    bigboard.libbig.logutil.init(default_log_level, debug_modules, 'bigboard.')

    if window:
        _logger.debug("adding %s to path", srcdir)
        window = gtk.Window(gtk.WINDOW_TOPLEVEL)
        box = gtk.VBox()
        window.add(box)
        applet = gnomeapplet.Applet()
        bbapplet = BigBoardApplet(applet, None)
        applet.reparent(box)
        window.show_all()
        gtk.main()
    else:
        gnomeapplet.bonobo_factory("OAFIID:BigBoard_Applet_Factory", 
                                   gnomeapplet.Applet.__gtype__, 
                                   "", "0", lambda a,i: BigBoardApplet(a,i) or True)
