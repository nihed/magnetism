<?xml version="1.0" encoding="UTF-8"?><!-- -*- tab-width: 4; indent-tabs-mode: t -*- -->
<superconf>
	<!-- The public host name of this server; you probably want to override
		 this in your ~/.super.conf -->
	<parameter name="serverHost">localhost.localdomain</parameter>

	<!-- A short name for this node; used for the tomcat jvmRoute. Must be
         unique within the cluster and match the identifier used in 
         worker.properties -->
    <parameter name="nodeName">localhost</parameter>

	<!-- Whether or not this instance runs as a JBoss cluster "slave" node -->
	<parameter name="slaveMode">no</parameter>

	<!-- you definitely need to change this if you're virtualizing -->
	<parameter name="tomcatHttpPort">8080</parameter>

	<!-- Base for public URLs -->
	<parameter name="baseurl">http://$serverHost:$tomcatHttpPort</parameter>

	<!-- let anyone log in as anyone (turn on in ~/.super.conf for debugging) -->
	<parameter name="disableAuthentication">false</parameter>

	<!-- Comma-separated list of features to enable; current allowed values:
               pollingTask
          -->
	<parameter name="serverFeatures"></parameter>

	<!-- Never send out any email -->
	<parameter name="disableEmail">false</parameter>

	<!-- Whether or not to enable the "admin" web page -->
	<parameter name="adminConsole">false</parameter>

	<parameter name="webVersion">3</parameter>

	<!-- Whether or not we have new feature descriptions on the features page -->
	<parameter name="newFeatures">false</parameter>
	
	<!-- Whether to run in "stealth mode" (only a minimal set of pages public) -->
	<parameter name="stealthMode">false</parameter>
	
	<!-- Guid of the summit group -->
	<parameter name="summitGroupGuid">vCzMssGXCz0xfh</parameter>
	
    <!-- Invitations for a regular new user -->
	<parameter name="newUserInvitationCount">0</parameter>	
	
	<!-- Invitations for a special new user, e.g someone from the "wants in" list -->
	<parameter name="specialNewUserInvitationCount">5</parameter>	
	
	<!-- The log level for the com.dumbhippo logger, DEBUG, INFO, WARN, ERROR -->
	<parameter name="dumbhippoLogLevel">DEBUG</parameter>

	<!-- The log level for stuff sent to noise.log, DEBUG, INFO, WARN, ERROR
		(setting to anything but DEBUG basically disables noise.log) -->
	<parameter name="noiseLogLevel">DEBUG</parameter>

	<!-- If set, TRACE level debugging is enabled for JBossCache -->
    <parameter name="jbossCacheTrace">no</parameter>

    <parameter name="jbossClusterTrace">no</parameter>

	<!-- The log level for the root logger (anything not covered by a more specific logger)-->
	<parameter name="rootLogLevel">INFO</parameter>

	<parameter name="jbossdir">/opt/jboss</parameter>

    <parameter name="clusterHosts"></parameter>
	<parameter name="bindHost">127.0.0.1</parameter>

	<!-- No default value for this, because bad things happen if you have 
         the same value as someone else on your local network. You should
         pick from 239.255.x.y, which is the "IPv4 Local Scope" -->
	<parameter name="multicastAddress">replace.with.multicast.address.example.com</parameter>

	<!-- Number of hops to keep outgoing packets alive for. 1 would be enough normally for a LAN -->
	<parameter name="multicastTTL">2</parameter>

	<parameter name="twiddle">$basedir/jboss/scripts/twiddle.sh</parameter> 
	<parameter name="jbossLibs">$jbossdir/server/default/lib</parameter>

	<parameter name="basedir">$home/dhdeploy</parameter>
	<parameter name="baseport">21000</parameter>
	<parameter name="svndir">$superdir/..</parameter>

	<parameter name="darfile">$superdir/dumbhippo.dar</parameter>
	
	<parameter name="dbPassword">MangoChutney</parameter>

	<parameter name="mysqlHost">127.0.0.1</parameter>
	<parameter name="mysqlPort">$((baseport+0))</parameter>
	<parameter name="mysqlEnabled">yes</parameter>
	<parameter name="mysqlTargetdir">$basedir/mysql</parameter>
	<parameter name="mysqlOptions">--defaults-file=$mysqlTargetdir/conf/my.cnf</parameter>

	<parameter name="pgsqlPort">$((baseport+60))</parameter>
	<parameter name="pgsqlEnabled">no</parameter>
	<parameter name="pgsqlOptions">-h $basedir/pgsql/run -p $pgsqlPort -U postgres</parameter>

	<!-- if the client is older than this, it must upgrade itself before
         doing anything else -->
	<parameter name="clientWindowsMinimum">1.1.66</parameter>
	<!-- if the client is older than this, an upgrade is offered, but the
         old version can still run  -->
	<parameter name="clientWindowsCurrent">1.1.88</parameter>
	<parameter name="clientWindowsDate">2/01/07</parameter>
	<!-- Download URL for the client -->
	<parameter name="clientWindowsDownload">http://devel.mugshot.org/download/windows/Mugshot-current.msi</parameter>
	<parameter name="clientWindowsDownloadSource">http://devel.mugshot.org/download/sources/windows/Mugshot-current.zip</parameter>	

	<!-- if the client is older than this, it must upgrade itself before
         doing anything else -->
	<parameter name="clientLinuxMinimum">1.1.15</parameter>
	<!-- if the client is older than this, an upgrade is offered, but the
         old version can still run  -->
	<parameter name="clientLinuxCurrent">1.1.36</parameter>
	<parameter name="clientLinuxDate">3/01/07</parameter>
	<!-- Download URL for the client -->
	<parameter name="clientFedora5Download">http://developer.mugshot.org/download/fedora-core-5/mugshot-1.1.36-1.fc5.i386.rpm</parameter>
	<parameter name="clientFedora5DownloadSRPM">http://developer.mugshot.org/download/sources/fedora-core-5/mugshot-1.1.36-1.fc5.src.rpm</parameter>
	<parameter name="clientFedora6Download">http://developer.mugshot.org/download/fedora-core-6/mugshot-1.1.36-1.fc6.i386.rpm</parameter>
	<parameter name="clientFedora6DownloadSRPM">http://developer.mugshot.org/download/sources/fedora-core-6/mugshot-1.1.36-1.fc6.src.rpm</parameter>		
	<parameter name="clientLinuxDownloadTar">http://developer.mugshot.org/download/sources/linux/mugshot-1.1.36.tar.gz</parameter>

	<parameter name="mailHost">127.0.0.1</parameter>
	<parameter name="mailPort">25</parameter>

	<!-- for 'super watch' we sometimes want to play sounds -->
	<parameter name="playSoundCommand">/usr/bin/play %s</parameter>

	<parameter name="jivePlainPort">$((baseport+20))</parameter>	
	<parameter name="jivePassword">MangoChutney</parameter>

	<!-- Both the jboss app and the imbot need to know the screen name ; also set 
		password below -->
	<parameter name="imbotScreenName">PleaseSetThisInSuperConf</parameter>

	<!-- AIM presence key for showing user presence; see developer.aim.com -->
	<parameter name="aimPresenceKey"></parameter>

	<!-- you have to create an Amazon web services account and put the key here -->
	<parameter name="amazonAccessKeyId"></parameter>
	
	<!-- you have to create an Amazon web services account and put the secret key here if using certain features (e.g. that rely on S3 storage) -->
	<parameter name="amazonSecretKey"></parameter>	
	
	<!-- S3 files have to be placed in a bucket, which is globally unique for all S3 users, so everyone has to 
	     make up an S3 bucket name -->
	<parameter name="amazonS3Bucket"></parameter>
	
	<!-- if you participate in the Amazon affiliate program, optionally put your affiliate tag here -->
	<parameter name="amazonAssociateTag"></parameter>	
	
	<!-- you must specify a Yahoo! web services application ID here -->
	<parameter name="yahooAppId">dumbhippo</parameter>

	<!-- stuff for your eBay developer account -->
	<parameter name="ebayDevId"></parameter>
    <parameter name="ebayAppId"></parameter>
    <parameter name="ebayCertId"></parameter>

	<!-- flickr api id -->
	<parameter name="flickrApiId"></parameter>
	
	<!-- Facebook api key and secret -->
	<parameter name="facebookApiKey"></parameter>
	<parameter name="facebookSecret"></parameter>
	
	<parameter name="googleAnalyticsKey"></parameter>

	<service name="mysql" enabled="$mysqlEnabled">
		<parameter name="targetdir">$mysqlTargetdir</parameter>
		<merge src="$superdir/mysql/files"
			   expand="yes"/>

		<targetAttributes pattern="/data/*" ignore="yes" preserve="yes"/> 
		<targetAttributes pattern="/log/*"	ignore="yes" preserve="yes"/> 
		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<parameter name="startCommand">$targetdir/scripts/mysql-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/mysql-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/mysql-status.sh</parameter>
		<parameter name="consoleCommand">$targetdir/scripts/mysql-console.sh</parameter>
		<parameter name="nukeCommand">$targetdir/scripts/mysql-nuke.sh</parameter>				 
		
		<!-- these values are oriented toward a debug instance, not anything production
		     where they should probably be much larger. Mysql's recommendation is 
		     buffer pool size of 50-80% of physical memory, and log file size of 
		     25% of buffer pool size, for a dedicated database machine. -->
		<parameter name="innodbBufferPoolSize">50M</parameter>
		<parameter name="innodbLogFileSize">15M</parameter>
		<parameter name="innodbLogBufferSize">8M</parameter>
		<!-- not really sure what this should be -->
		<parameter name="innodbAdditionalMemPoolSize">20M</parameter>
	</service>

	<service name="pgsql" enabled="$pgsqlEnabled">
		<parameter name="targetdir">$basedir/pgsql</parameter>
		<merge src="$superdir/pgsql/files"
			   expand="yes"/>

		<targetAttributes pattern="/data/*" ignore="yes" preserve="yes"/> 
		<targetAttributes pattern="/log/*"	ignore="yes" preserve="yes"/> 
		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<parameter name="startCommand">$targetdir/scripts/pgsql-start.sh</parameter>
		<parameter name="stopCommand">/usr/bin/pg_ctl -D $targetdir/data stop</parameter>
		<parameter name="statusCommand">/usr/bin/pg_ctl -D $targetdir/data status</parameter>
		<parameter name="consoleCommand">/usr/bin/psql $pgsqlOptions dumbhippo</parameter>
		<parameter name="nukeCommand">$targetdir/scripts/pgsql-nuke.sh</parameter>
	</service>

	<service name="jboss" class="JBossService">
		<requiredService service="mysql"/> <!-- or -->
		<requiredService service="pgsql"/>

		<parameter name="jbossdir">/opt/jboss</parameter>
		<parameter name="targetdir">$basedir/jboss</parameter>
		<parameter name="filesavedir">$targetdir/data/files</parameter>
		<parameter name="luceneIndexDir">$targetdir/data/index</parameter>
        <parameter name="crashdumpDir">$targetdir/data/crashdump</parameter>
        <parameter name="appinfoDir">$targetdir/data/appinfo</parameter>

		<parameter name="jbossClusterEnabled">no</parameter>
		<parameter name="jbossPartition">default</parameter>

		<parameter name="jnpPort">$((baseport+10))</parameter>
		<parameter name="jrmpRmiPort">$((baseport+11))</parameter>
		<parameter name="jdwpPort">$((baseport+12))</parameter>
		<parameter name="jrmiPort">$((baseport+13))</parameter>	
		<parameter name="jrmiObjectPort">$((baseport+14))</parameter>
		<parameter name="jinvokerPort">$((baseport+15))</parameter>
		<parameter name="jbossOilInvocationLayerPort">$((baseport+16))</parameter>
        <parameter name="hajndiPort">$((baseport+17))</parameter>
        <parameter name="hajndiRmiPort">$((baseport+18))</parameter>
        <parameter name="jbossInvokerLocatorPort">$((baseport+19))</parameter>
     	<parameter name="presenceMcastPort">$((baseport+50))</parameter>
     	<parameter name="jnpDiscoveryPort">$((baseport+51))</parameter>
        <parameter name="haRmiObjectPort">$((baseport+52))</parameter>
        <parameter name="haInvokerPort">$((baseport+53))</parameter>
        <parameter name="uil2MQPort">$((baseport+54))</parameter>
	    <parameter name="entityCacheMcastPort">$((baseport+55))</parameter>
	    <parameter name="clusterServiceMcastPort">$((baseport+56))</parameter>
	    <parameter name="lockServiceMcastPort">$((baseport+57))</parameter>

        <!-- Timeout for failure discovery (ms) -->
        <parameter name="jgroupsFdTimeout">10000</parameter>
	    <!-- Maximum tries before shunning -->
        <parameter name="jgroupsFdMaxTries">5</parameter>

		<!-- How often to run the pass through all LiveUser objects and update their
             hotness, live posts, and so forth, in seconds -->
		<parameter name="userUpdateInterval">300</parameter>

		<parameter name="javaMaxHeap">256</parameter>

		<!-- Frequency to scan for new deployed archives, in milliseconds -->
		<parameter name="deployScanPeriod">1000</parameter>

		<!-- Maximum number of Database connections to open at once -->
		<parameter name="maxConnectionPoolSize">50</parameter>

		<merge src="$jbossdir/server/all"
			   exclude="$superdir/jboss/jboss.exclude"
			   symlink="yes"/>
		<!-- The 'all' config is clustered, we need a non-clustered configiration for TomCat -->
		<merge src="$jbossdir/server/default/deploy/jbossweb-tomcat55.sar/META-INF/jboss-service.xml"
			   dest="deploy/jbossweb-tomcat55.sar/META-INF/jboss-service.xml"
			   symlink="yes"/>
		<merge src="$superdir/jboss/files"
			   expand="yes"/>
		<merge src="$svndir/lib/server/mysql-connector-java-3.1.12-bin.jar"
			   dest="lib/mysql-connector-java.jar"/>
		<merge src="$svndir/lib/server/postgresql-8.1-404.jdbc3.jar"
			   dest="lib/postgresql-8.1-404.jdbc3.jar"/>
		<!-- This needs to be in the lib/ directory not in the ear, since
             hibernate-annotations.jar depends on it -->
		<merge src="$svndir/lib/server/lucene-core-2.0.0.jar"
			   dest="lib/lucene-core-2.0.0.jar"/>
		<merge src="$svndir/lib/server/jboss-cache.jar"
			   dest="lib/jboss-cache.jar"/>
		<merge src="$svndir/lib/server/hibernate3.jar"
			   dest="lib/hibernate3.jar"/>
		<merge src="$svndir/lib/server/hibernate-annotations.jar"
			   dest="lib/hibernate-annotations.jar"/>
		<merge src="$svndir/server/target/classes/dumbhippo-logging.jar"
			   dest="lib/dumbhippo-logging.jar"/>
		<merge src="$svndir/server/target/deploy/dumbhippo.ear"
			   dest="deploy/dumbhippo.ear"
			   hot="yes"/>
                <targetAttributes
			   pattern="/deploy/dumbhippo.ear/META-INF/application.xml"
                           hot_update_last="yes"/>
		<!-- uncomment this if splitting the war from the ear -->
	    <!--
		<merge src="$svndir/server/target/deploy/dumbhippo.war"
			   dest="deploy/dumbhippo.war"
			   hot="yes"/> -->

		<targetAttributes pattern="/data/appinfo"    ignore="yes" preserve="yes"/>
		<targetAttributes pattern="/data/crashdump"  ignore="yes" preserve="yes"/>
		<targetAttributes pattern="/data/files"	     ignore="yes" preserve="yes"/>
		<targetAttributes pattern="/data/index"	     ignore="yes" preserve="yes"/>
		<targetAttributes pattern="/data/statistics" ignore="yes" preserve="yes"/>
		<targetAttributes pattern="/data/**" ignore="yes"/>
		<targetAttributes pattern="/log"   ignore="yes" preserve="yes"/> 
		<targetAttributes pattern="/run/*" ignore="yes"/> 
		<targetAttributes pattern="/tmp"   ignore="yes"/> 
		<targetAttributes pattern="/work"  ignore="yes"/> 
	
		<parameter name="startCommand">$targetdir/scripts/jboss-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/jboss-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/jboss-status.sh</parameter>
		<parameter name="logFile">$targetdir/log/server.log</parameter>

		<parameter name="reloadSound">/usr/share/sounds/gtk-events/toggled.wav</parameter>
	</service>

	<service name="jive">
		<requiredService service="mysql"/> <!-- or -->
		<requiredService service="pgsql"/>
		<requiredService service="jboss"/>

		<parameter name="targetdir">$basedir/jive</parameter>
		<parameter name="jivedir">$svndir/wildfire/target</parameter>
		<parameter name="dbpath">$targetdir/jive.db</parameter>
		<parameter name="dbpassword">dummypw</parameter>

		<parameter name="jiveSecurePort">$((baseport+21))</parameter>
		<parameter name="jiveServerPort">$((baseport+22))</parameter>
		<parameter name="jiveComponentPort">$((baseport+23))</parameter>
		<parameter name="jiveAdminPort">$((baseport+24))</parameter>
		<parameter name="jiveAdminSecurePort">$((baseport+25))</parameter>
		<parameter name="jiveJdwpPort">$((baseport+26))</parameter>
	
		<merge src="$jivedir"
			   exclude="$superdir/jive/jive.exclude"/>
		<merge src="$superdir/jive/files"
			   expand="yes"/>
		<merge src="$jivedir/lib/wildfire.jar"
			   dest="deploy/wildfire.sar/wildfire.jar"/>
		<merge src="$jivedir/plugins/hippo.jar"
			   dest="plugins/hippo.jar"/>

		<targetAttributes pattern="/logs/*"	 ignore="yes" preserve="yes"/>
		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<!-- Jive likes to rewrite its config file with different whitespace, so
			 strip leading and trailing whitespace before comparing expanded files -->
		<targetAttributes pattern="/conf/wildfire.xml" fuzzy="yes"/>

		<!-- This is the expanded version of hippo.jar -->
		<targetAttributes pattern="/plugins/hippo/" ignore="yes"/>
		<parameter name="startCommand">$targetdir/scripts/jive-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/jive-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/jive-running.py</parameter>
	</service>
	
	<service name="imbot">
		<!-- dependencies not listed for now so we don't restart this thing a million times -->
		
		<parameter name="imbotPassword">PleaseSetThisInSuperConfAlso</parameter>
		
		<parameter name="targetdir">$basedir/imbot</parameter>
		<parameter name="imbotdir">$svndir/imbot/target</parameter>

		<merge src="$superdir/imbot/files"
			   expand="yes"/>
		<merge src="$imbotdir/classes/dumbhippo-imbot.jar"
			   dest="dumbhippo-imbot.jar"/>
		<merge src="$imbotdir/lib"
			   dest="lib"/>

		<targetAttributes pattern="/logs/*"	 ignore="yes" preserve="yes"/>
		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<parameter name="startCommand">$targetdir/scripts/imbot-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/imbot-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/imbot-running.sh</parameter>
	</service>

	<service name="hungry">
		<parameter name="targetdir">$basedir/hungry</parameter>

		<!-- Unless this is enabled, the option to run destructive tests won't be presented -->
		<parameter name="enableDestructive">false</parameter>

		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<merge src="$superdir/hungry/files"
			   expand="yes"/>

		<parameter name="consoleCommand">$targetdir/scripts/hungry-console.sh</parameter>
	</service>

    <service name="balancer" enabled="no">
		<parameter name="balancerBind"></parameter> <!-- bind to this interface, all if unset -->
		<parameter name="targetdir">$basedir/balancer</parameter>
		<parameter name="balancerdir">$svndir/cluster/target</parameter>
		<merge src="$superdir/balancer/files"
			   expand="yes"/>
		<merge src="$balancerdir/classes/dumbhippo-xmpp-balancer.jar"
			   dest="dumbhippo-xmpp-balancer.jar"/>
                <merge src="$balancerdir/lib"
                           dest="lib"/>
		<targetAttributes pattern="/logs/*"	 ignore="yes" preserve="yes"/>
		<targetAttributes pattern="/run/*"	ignore="yes"/>

		<parameter name="startCommand">$targetdir/scripts/balancer-start.sh</parameter>
		<parameter name="stopCommand">$targetdir/scripts/balancer-stop.sh</parameter>
		<parameter name="statusCommand">$targetdir/scripts/balancer-running.sh</parameter>
	</service> 
</superconf>
