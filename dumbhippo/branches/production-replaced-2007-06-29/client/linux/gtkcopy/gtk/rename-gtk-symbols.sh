#! /bin/bash

## this script is completely unportable and the output only changes occasionally, so 
## it doesn't run automatically in the build

function die() {
    echo $* 1>&2
    exit 1
}

if ! test -e gtksimulated.h ; then
    echo "This script has to be run in srcdir/gtk"
fi

if test -z "$BUILDDIR" ; then
    if test -d "../build" && test -e "../build/Makefile" ; then
        BUILDDIR=../build
    elif test -d "../.libs" && test -e "../Makefile" ; then
        BUILDDIR=..
    fi
fi

if test -z "$BUILDDIR" ; then
    die "You have to set the BUILDDIR variable in the environment if you haven't used a 'normal' one"
fi

echo "Using BUILDDIR=$BUILDDIR thus $BUILDDIR/.libs/libgtkcopy.a"

LIB=.libs/libgtkcopy.a
HEADER=hippo-gtk-renamings.h

test -e "$BUILDDIR"/"$LIB" || die "you have to build $LIB first"

## note that here we want to get _any_ symbol, even if for some reason 
## gtk hasn't namespaced it properly. We do want to omit weird library
## implementation details though, which seem to have "." in the symbol names.
## Symbols with "t" are static and we could leave them AFAIK, but
## just being cautious.
nm --format posix "$BUILDDIR"/"$LIB" |                    \
    cut --only-delimited --delimiter=' ' --fields='1,2' | \
    grep -e ' [Tt]' |                                     \
    grep -v -e '\.' |                                     \
    cut --delimiter=' ' --fields=1 > gtk-symbols.list || die "failed to extract symbol list"

OLD_COUNT=0
NEW_COUNT=0
cat > $HEADER <<EOF
#ifndef __HIPPO_GTK_RENAMINGS_H__
#define __HIPPO_GTK_RENAMINGS_H__
/* autogenerated file by rename-gtk-symbols.sh */
/* ALL GTK ".c" FILES IN THIS DIRECTORY MUST INCLUDE THIS FILE AFTER THE SYSTEM GTK HEADERS */
/* Alternatively, include gtksimulated.h after system gtk headers */
EOF
for SYM in `cat gtk-symbols.list` ; do
    # this has an odd side effect of "renaming" syms that were already hippo_ in 
    # source code, but it doesn't matter - only happens for e.g. the marshalers
    GTKSYM=`echo $SYM | sed -e 's/hippo_//g'`
    if test "$SYM" == "$GTKSYM" ; then
        echo "Adding new rename: $GTKSYM hippo_$GTKSYM"
        NEW_COUNT=$(($NEW_COUNT + 1))
    else
        OLD_COUNT=$(($OLD_COUNT + 1))
    fi
    echo "#define $GTKSYM hippo_$GTKSYM" >> $HEADER || die "failed to write out renaming"
done
cat >> $HEADER <<EOF
#endif /* __HIPPO_GTK_RENAMINGS_H__ */
EOF

echo "Wrote $HEADER with $OLD_COUNT previously-renamed symbols and $NEW_COUNT newly-renamed"
